{"ast":null,"code":"import { useEffectEvent as $ispOf$useEffectEvent, getOwnerDocument as $ispOf$getOwnerDocument } from \"@react-aria/utils\";\nimport { useRef as $ispOf$useRef, useEffect as $ispOf$useEffect } from \"react\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ // Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nfunction $e0b6e0b68ec7f50f$export$872b660ac5a1ff98(props) {\n  let {\n    ref: ref,\n    onInteractOutside: onInteractOutside,\n    isDisabled: isDisabled,\n    onInteractOutsideStart: onInteractOutsideStart\n  } = props;\n  let stateRef = (0, $ispOf$useRef)({\n    isPointerDown: false,\n    ignoreEmulatedMouseEvents: false\n  });\n  let onPointerDown = (0, $ispOf$useEffectEvent)(e => {\n    if (onInteractOutside && $e0b6e0b68ec7f50f$var$isValidEvent(e, ref)) {\n      if (onInteractOutsideStart) onInteractOutsideStart(e);\n      stateRef.current.isPointerDown = true;\n    }\n  });\n  let triggerInteractOutside = (0, $ispOf$useEffectEvent)(e => {\n    if (onInteractOutside) onInteractOutside(e);\n  });\n  (0, $ispOf$useEffect)(() => {\n    let state = stateRef.current;\n    if (isDisabled) return;\n    const element = ref.current;\n    const documentObject = (0, $ispOf$getOwnerDocument)(element);\n    // Use pointer events if available. Otherwise, fall back to mouse and touch events.\n    if (typeof PointerEvent !== 'undefined') {\n      let onPointerUp = e => {\n        if (state.isPointerDown && $e0b6e0b68ec7f50f$var$isValidEvent(e, ref)) triggerInteractOutside(e);\n        state.isPointerDown = false;\n      };\n      // changing these to capture phase fixed combobox\n      documentObject.addEventListener('pointerdown', onPointerDown, true);\n      documentObject.addEventListener('pointerup', onPointerUp, true);\n      return () => {\n        documentObject.removeEventListener('pointerdown', onPointerDown, true);\n        documentObject.removeEventListener('pointerup', onPointerUp, true);\n      };\n    } else {\n      let onMouseUp = e => {\n        if (state.ignoreEmulatedMouseEvents) state.ignoreEmulatedMouseEvents = false;else if (state.isPointerDown && $e0b6e0b68ec7f50f$var$isValidEvent(e, ref)) triggerInteractOutside(e);\n        state.isPointerDown = false;\n      };\n      let onTouchEnd = e => {\n        state.ignoreEmulatedMouseEvents = true;\n        if (state.isPointerDown && $e0b6e0b68ec7f50f$var$isValidEvent(e, ref)) triggerInteractOutside(e);\n        state.isPointerDown = false;\n      };\n      documentObject.addEventListener('mousedown', onPointerDown, true);\n      documentObject.addEventListener('mouseup', onMouseUp, true);\n      documentObject.addEventListener('touchstart', onPointerDown, true);\n      documentObject.addEventListener('touchend', onTouchEnd, true);\n      return () => {\n        documentObject.removeEventListener('mousedown', onPointerDown, true);\n        documentObject.removeEventListener('mouseup', onMouseUp, true);\n        documentObject.removeEventListener('touchstart', onPointerDown, true);\n        documentObject.removeEventListener('touchend', onTouchEnd, true);\n      };\n    }\n  }, [ref, isDisabled, onPointerDown, triggerInteractOutside]);\n}\nfunction $e0b6e0b68ec7f50f$var$isValidEvent(event, ref) {\n  if (event.button > 0) return false;\n  if (event.target) {\n    // if the event target is no longer in the document, ignore\n    const ownerDocument = event.target.ownerDocument;\n    if (!ownerDocument || !ownerDocument.documentElement.contains(event.target)) return false;\n    // If the target is within a top layer element (e.g. toasts), ignore.\n    if (event.target.closest('[data-react-aria-top-layer]')) return false;\n  }\n  return ref.current && !ref.current.contains(event.target);\n}\nexport { $e0b6e0b68ec7f50f$export$872b660ac5a1ff98 as useInteractOutside };","map":{"version":3,"mappings":";;;AAAA;;;;;;;;;;GAAA,CAYA;AACA;AACA;AACA;;AAkBO,SAASA,0CAAmBC,KAA2B;EAC5D,IAAI;IAAAC,KAACA,GAAG;IAAAC,mBAAEA,iBAAiB;IAAAC,YAAEA,UAAU;IAAAC,wBAAEA;EAAsB,CAAC,GAAGJ;EACnE,IAAIK,WAAW,iBAAK,EAAE;IACpBC,eAAe;IACfC,2BAA2B;EAC7B;EAEA,IAAIC,gBAAgB,yBAAa,EAAGC;IAClC,IAAIP,qBAAqBQ,mCAAaD,GAAGR,MAAM;MAC7C,IAAIG,wBACFA,uBAAuBK;MAEzBJ,SAASM,OAAO,CAACL,aAAa,GAAG;IACnC;EACF;EAEA,IAAIM,yBAAyB,yBAAa,EAAGH;IAC3C,IAAIP,mBACFA,kBAAkBO;EAEtB;EAEA,oBAAQ,EAAE;IACR,IAAII,QAAQR,SAASM,OAAO;IAC5B,IAAIR,YACF;IAGF,MAAMW,UAAUb,IAAIU,OAAO;IAC3B,MAAMI,iBAAiB,2BAAe,EAAED;IAExC;IACA,IAAI,OAAOE,iBAAiB,aAAa;MACvC,IAAIC,cAAeR;QACjB,IAAII,MAAMP,aAAa,IAAII,mCAAaD,GAAGR,MACzCW,uBAAuBH;QAEzBI,MAAMP,aAAa,GAAG;MACxB;MAEA;MACAS,eAAeG,gBAAgB,CAAC,eAAeV,eAAe;MAC9DO,eAAeG,gBAAgB,CAAC,aAAaD,aAAa;MAE1D,OAAO;QACLF,eAAeI,mBAAmB,CAAC,eAAeX,eAAe;QACjEO,eAAeI,mBAAmB,CAAC,aAAaF,aAAa;MAC/D;IACF,OAAO;MACL,IAAIG,YAAaX;QACf,IAAII,MAAMN,yBAAyB,EACjCM,MAAMN,yBAAyB,GAAG,WAC7B,IAAIM,MAAMP,aAAa,IAAII,mCAAaD,GAAGR,MAChDW,uBAAuBH;QAEzBI,MAAMP,aAAa,GAAG;MACxB;MAEA,IAAIe,aAAcZ;QAChBI,MAAMN,yBAAyB,GAAG;QAClC,IAAIM,MAAMP,aAAa,IAAII,mCAAaD,GAAGR,MACzCW,uBAAuBH;QAEzBI,MAAMP,aAAa,GAAG;MACxB;MAEAS,eAAeG,gBAAgB,CAAC,aAAaV,eAAe;MAC5DO,eAAeG,gBAAgB,CAAC,WAAWE,WAAW;MACtDL,eAAeG,gBAAgB,CAAC,cAAcV,eAAe;MAC7DO,eAAeG,gBAAgB,CAAC,YAAYG,YAAY;MAExD,OAAO;QACLN,eAAeI,mBAAmB,CAAC,aAAaX,eAAe;QAC/DO,eAAeI,mBAAmB,CAAC,WAAWC,WAAW;QACzDL,eAAeI,mBAAmB,CAAC,cAAcX,eAAe;QAChEO,eAAeI,mBAAmB,CAAC,YAAYE,YAAY;MAC7D;IACF;EACF,GAAG,CAACpB,KAAKE,YAAYK,eAAeI,uBAAuB;AAC7D;AAEA,SAASF,mCAAaY,KAAK,EAAErB,GAAG;EAC9B,IAAIqB,MAAMC,MAAM,GAAG,GACjB,OAAO;EAGT,IAAID,MAAME,MAAM,EAAE;IAChB;IACA,MAAMC,gBAAgBH,MAAME,MAAM,CAACC,aAAa;IAChD,IAAI,CAACA,iBAAiB,CAACA,cAAcC,eAAe,CAACC,QAAQ,CAACL,MAAME,MAAM,GACxE,OAAO;IAGT;IACA,IAAIF,MAAME,MAAM,CAACI,OAAO,CAAC,gCACvB,OAAO;EAEX;EAEA,OAAO3B,IAAIU,OAAO,IAAI,CAACV,IAAIU,OAAO,CAACgB,QAAQ,CAACL,MAAME,MAAM;AAC1D","names":["$e0b6e0b68ec7f50f$export$872b660ac5a1ff98","props","ref","onInteractOutside","isDisabled","onInteractOutsideStart","stateRef","isPointerDown","ignoreEmulatedMouseEvents","onPointerDown","e","$e0b6e0b68ec7f50f$var$isValidEvent","current","triggerInteractOutside","state","element","documentObject","PointerEvent","onPointerUp","addEventListener","removeEventListener","onMouseUp","onTouchEnd","event","button","target","ownerDocument","documentElement","contains","closest"],"sources":["C:\\Users\\aiwar\\Desktop\\cloth\\myy-app\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\useInteractOutside.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {getOwnerDocument, useEffectEvent} from '@react-aria/utils';\nimport {RefObject} from '@react-types/shared';\nimport {useEffect, useRef} from 'react';\n\nexport interface InteractOutsideProps {\n  ref: RefObject<Element | null>,\n  onInteractOutside?: (e: PointerEvent) => void,\n  onInteractOutsideStart?: (e: PointerEvent) => void,\n  /** Whether the interact outside events should be disabled. */\n  isDisabled?: boolean\n}\n\n/**\n * Example, used in components like Dialogs and Popovers so they can close\n * when a user clicks outside them.\n */\nexport function useInteractOutside(props: InteractOutsideProps) {\n  let {ref, onInteractOutside, isDisabled, onInteractOutsideStart} = props;\n  let stateRef = useRef({\n    isPointerDown: false,\n    ignoreEmulatedMouseEvents: false\n  });\n\n  let onPointerDown = useEffectEvent((e) => {\n    if (onInteractOutside && isValidEvent(e, ref)) {\n      if (onInteractOutsideStart) {\n        onInteractOutsideStart(e);\n      }\n      stateRef.current.isPointerDown = true;\n    }\n  });\n\n  let triggerInteractOutside = useEffectEvent((e: PointerEvent) => {\n    if (onInteractOutside) {\n      onInteractOutside(e);\n    }\n  });\n\n  useEffect(() => {\n    let state = stateRef.current;\n    if (isDisabled) {\n      return;\n    }\n\n    const element = ref.current;\n    const documentObject = getOwnerDocument(element);\n\n    // Use pointer events if available. Otherwise, fall back to mouse and touch events.\n    if (typeof PointerEvent !== 'undefined') {\n      let onPointerUp = (e) => {\n        if (state.isPointerDown && isValidEvent(e, ref)) {\n          triggerInteractOutside(e);\n        }\n        state.isPointerDown = false;\n      };\n\n      // changing these to capture phase fixed combobox\n      documentObject.addEventListener('pointerdown', onPointerDown, true);\n      documentObject.addEventListener('pointerup', onPointerUp, true);\n\n      return () => {\n        documentObject.removeEventListener('pointerdown', onPointerDown, true);\n        documentObject.removeEventListener('pointerup', onPointerUp, true);\n      };\n    } else {\n      let onMouseUp = (e) => {\n        if (state.ignoreEmulatedMouseEvents) {\n          state.ignoreEmulatedMouseEvents = false;\n        } else if (state.isPointerDown && isValidEvent(e, ref)) {\n          triggerInteractOutside(e);\n        }\n        state.isPointerDown = false;\n      };\n\n      let onTouchEnd = (e) => {\n        state.ignoreEmulatedMouseEvents = true;\n        if (state.isPointerDown && isValidEvent(e, ref)) {\n          triggerInteractOutside(e);\n        }\n        state.isPointerDown = false;\n      };\n\n      documentObject.addEventListener('mousedown', onPointerDown, true);\n      documentObject.addEventListener('mouseup', onMouseUp, true);\n      documentObject.addEventListener('touchstart', onPointerDown, true);\n      documentObject.addEventListener('touchend', onTouchEnd, true);\n\n      return () => {\n        documentObject.removeEventListener('mousedown', onPointerDown, true);\n        documentObject.removeEventListener('mouseup', onMouseUp, true);\n        documentObject.removeEventListener('touchstart', onPointerDown, true);\n        documentObject.removeEventListener('touchend', onTouchEnd, true);\n      };\n    }\n  }, [ref, isDisabled, onPointerDown, triggerInteractOutside]);\n}\n\nfunction isValidEvent(event, ref) {\n  if (event.button > 0) {\n    return false;\n  }\n\n  if (event.target) {\n    // if the event target is no longer in the document, ignore\n    const ownerDocument = event.target.ownerDocument;\n    if (!ownerDocument || !ownerDocument.documentElement.contains(event.target)) {\n      return false;\n    }\n\n    // If the target is within a top layer element (e.g. toasts), ignore.\n    if (event.target.closest('[data-react-aria-top-layer]')) {\n      return false;\n    }\n  }\n\n  return ref.current && !ref.current.contains(event.target);\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}