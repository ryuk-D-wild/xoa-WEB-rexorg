{"ast":null,"code":"/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ /**\n    * Takes a value and forces it to the closest min/max if it's outside. Also forces it to the closest valid step.\n    */function $9446cca9a3875146$export$7d15b64cf5a3a4c4(value) {\n  let min = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -Infinity;\n  let max = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Infinity;\n  let newValue = Math.min(Math.max(value, min), max);\n  return newValue;\n}\nfunction $9446cca9a3875146$export$e1a7b8e69ef6c52f(value, step) {\n  let roundedValue = value;\n  let stepString = step.toString();\n  let pointIndex = stepString.indexOf('.');\n  let precision = pointIndex >= 0 ? stepString.length - pointIndex : 0;\n  if (precision > 0) {\n    let pow = Math.pow(10, precision);\n    roundedValue = Math.round(roundedValue * pow) / pow;\n  }\n  return roundedValue;\n}\nfunction $9446cca9a3875146$export$cb6e0bb50bc19463(value, min, max, step) {\n  min = Number(min);\n  max = Number(max);\n  let remainder = (value - (isNaN(min) ? 0 : min)) % step;\n  let snappedValue = $9446cca9a3875146$export$e1a7b8e69ef6c52f(Math.abs(remainder) * 2 >= step ? value + Math.sign(remainder) * (step - Math.abs(remainder)) : value - remainder, step);\n  if (!isNaN(min)) {\n    if (snappedValue < min) snappedValue = min;else if (!isNaN(max) && snappedValue > max) snappedValue = min + Math.floor($9446cca9a3875146$export$e1a7b8e69ef6c52f((max - min) / step, step)) * step;\n  } else if (!isNaN(max) && snappedValue > max) snappedValue = Math.floor($9446cca9a3875146$export$e1a7b8e69ef6c52f(max / step, step)) * step;\n  // correct floating point behavior by rounding to step precision\n  snappedValue = $9446cca9a3875146$export$e1a7b8e69ef6c52f(snappedValue, step);\n  return snappedValue;\n}\nfunction $9446cca9a3875146$export$b6268554fba451f(value, digits) {\n  let base = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 10;\n  const pow = Math.pow(base, digits);\n  return Math.round(value * pow) / pow;\n}\nexport { $9446cca9a3875146$export$7d15b64cf5a3a4c4 as clamp, $9446cca9a3875146$export$e1a7b8e69ef6c52f as roundToStepPrecision, $9446cca9a3875146$export$cb6e0bb50bc19463 as snapValueToStep, $9446cca9a3875146$export$b6268554fba451f as toFixedNumber };","map":{"version":3,"mappings":"AAAA;;;;;;;;;;GAAA,CAYA;;MAGO,SAASA,0CAAMC,KAAa,EAAiD;EAAA,IAA/CC,0EAAc,CAACC,QAAQ;EAAA,IAAEC,0EAAcD,QAAQ;EAClF,IAAIE,WAAWC,KAAKJ,GAAG,CAACI,KAAKF,GAAG,CAACH,OAAOC,MAAME;EAC9C,OAAOC;AACT;AAEO,SAASE,0CAAqBN,KAAa,EAAEO,IAAY;EAC9D,IAAIC,eAAeR;EACnB,IAAIS,aAAaF,KAAKG,QAAQ;EAC9B,IAAIC,aAAaF,WAAWG,OAAO,CAAC;EACpC,IAAIC,YAAYF,cAAc,IAAIF,WAAWK,MAAM,GAAGH,aAAa;EACnE,IAAIE,YAAY,GAAG;IACjB,IAAIE,MAAMV,KAAKU,GAAG,CAAC,IAAIF;IACvBL,eAAeH,KAAKW,KAAK,CAACR,eAAeO,OAAOA;EAClD;EACA,OAAOP;AACT;AAEO,SAASS,0CAAgBjB,KAAa,EAAEC,GAAuB,EAAEE,GAAuB,EAAEI,IAAY;EAC3GN,MAAMiB,OAAOjB;EACbE,MAAMe,OAAOf;EACb,IAAIgB,YAAa,CAACnB,SAASoB,MAAMnB,OAAO,IAAIA,GAAE,CAAC,IAAKM;EACpD,IAAIc,eAAef,0CAAqBD,KAAKiB,GAAG,CAACH,aAAa,KAAKZ,OAC/DP,QAAQK,KAAKkB,IAAI,CAACJ,cAAcZ,OAAOF,KAAKiB,GAAG,CAACH,UAAS,IACzDnB,QAAQmB,WAAWZ;EAEvB,IAAI,CAACa,MAAMnB,MAAM;IACf,IAAIoB,eAAepB,KACjBoB,eAAepB,SACV,IAAI,CAACmB,MAAMjB,QAAQkB,eAAelB,KACvCkB,eAAepB,MAAMI,KAAKmB,KAAK,CAAClB,0CAAqB,CAACH,MAAMF,GAAE,IAAKM,MAAMA,SAASA;EAEtF,OAAO,IAAI,CAACa,MAAMjB,QAAQkB,eAAelB,KACvCkB,eAAehB,KAAKmB,KAAK,CAAClB,0CAAqBH,MAAMI,MAAMA,SAASA;EAGtE;EACAc,eAAef,0CAAqBe,cAAcd;EAElD,OAAOc;AACT;AAGO,SAASI,yCAAczB,KAAa,EAAE0B,MAAc,EAAmB;EAAA,IAAjBC,2EAAe,EAAE;EAC5E,MAAMZ,MAAMV,KAAKU,GAAG,CAACY,MAAMD;EAE3B,OAAOrB,KAAKW,KAAK,CAAChB,QAAQe,OAAOA;AACnC","names":["$9446cca9a3875146$export$7d15b64cf5a3a4c4","value","min","Infinity","max","newValue","Math","$9446cca9a3875146$export$e1a7b8e69ef6c52f","step","roundedValue","stepString","toString","pointIndex","indexOf","precision","length","pow","round","$9446cca9a3875146$export$cb6e0bb50bc19463","Number","remainder","isNaN","snappedValue","abs","sign","floor","$9446cca9a3875146$export$b6268554fba451f","digits","base"],"sources":["C:\\Users\\aiwar\\Desktop\\cloth\\myy-app\\node_modules\\@react-stately\\utils\\dist\\packages\\@react-stately\\utils\\src\\number.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n/**\n * Takes a value and forces it to the closest min/max if it's outside. Also forces it to the closest valid step.\n */\nexport function clamp(value: number, min: number = -Infinity, max: number = Infinity): number {\n  let newValue = Math.min(Math.max(value, min), max);\n  return newValue;\n}\n\nexport function roundToStepPrecision(value: number, step: number) {\n  let roundedValue = value;\n  let stepString = step.toString();\n  let pointIndex = stepString.indexOf('.');\n  let precision = pointIndex >= 0 ? stepString.length - pointIndex : 0;\n  if (precision > 0) {\n    let pow = Math.pow(10, precision);\n    roundedValue = Math.round(roundedValue * pow) / pow;\n  }\n  return roundedValue;\n}\n\nexport function snapValueToStep(value: number, min: number | undefined, max: number | undefined, step: number): number {\n  min = Number(min);\n  max = Number(max);\n  let remainder = ((value - (isNaN(min) ? 0 : min)) % step);\n  let snappedValue = roundToStepPrecision(Math.abs(remainder) * 2 >= step\n    ? value + Math.sign(remainder) * (step - Math.abs(remainder))\n    : value - remainder, step);\n\n  if (!isNaN(min)) {\n    if (snappedValue < min) {\n      snappedValue = min;\n    } else if (!isNaN(max) && snappedValue > max) {\n      snappedValue = min + Math.floor(roundToStepPrecision((max - min) / step, step)) * step;\n    }\n  } else if (!isNaN(max) && snappedValue > max) {\n    snappedValue = Math.floor(roundToStepPrecision(max / step, step)) * step;\n  }\n\n  // correct floating point behavior by rounding to step precision\n  snappedValue = roundToStepPrecision(snappedValue, step);\n\n  return snappedValue;\n}\n\n/* Takes a value and rounds off to the number of digits. */\nexport function toFixedNumber(value: number, digits: number, base: number = 10): number {\n  const pow = Math.pow(base, digits);\n\n  return Math.round(value * pow) / pow;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}